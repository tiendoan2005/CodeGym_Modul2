import java.io.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

class MovieService implements MovieServiceInterface {
    private List<Movie> movies = new ArrayList<>();

    @Override
    public void addMovie(Movie movie) {
        for (Movie m : movies) {
            if (m.getId().equals(movie.getId())) {
                System.out.println("‚ùå ID phim ƒë√£ t·ªìn t·∫°i! Vui l√≤ng nh·∫≠p ID kh√°c.");
                return;
            }
        }
        movies.add(movie);
        System.out.println("‚úÖ ƒê√£ th√™m phim th√†nh c√¥ng!");
        displayMovies();
    }

    @Override
    public boolean deleteMovie(String id) {
        Movie movieToDelete = findMovieById(id);
        if (movieToDelete == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y phim v·ªõi ID: " + id);
            return false;
        }

        System.out.println("üîé T√¨m th·∫•y phim: " + movieToDelete.getName() + " c√≥ ID: " + id);
        System.out.print("B·∫°n c√≥ mu·ªën x√≥a phim n√†y? (Y/N): ");

        Scanner scanner = new Scanner(System.in);
        String answer = scanner.next().trim();

        if (answer.equalsIgnoreCase("y")) {
            movies.remove(movieToDelete);
            System.out.println("‚úÖ Phim ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!");
            return true;
        } else {
            System.out.println("‚ùå H·ªßy x√≥a phim!");
            return false;
        }
    }

    @Override
    public boolean editMovie(String id, String newName, String newGenre, int newDuration) {
        for (Movie movie : movies) {
            if (movie.getId().equals(id)) {
                movie.setName(newName);
                movie.setGenre(newGenre);
                movie.setDuration(newDuration);
                return true;
            }
        }
        return false;
    }

    @Override
    public void displayMovies() {
        if (movies.isEmpty()) {
            System.out.println("üì≠ Danh s√°ch phim tr·ªëng.");
            return;
        }

        System.out.println("\nüé¨ DANH S√ÅCH PHIM üé¨");
        System.out.println("----------------------------------------------------------------");
        System.out.printf("| %-8s | %-20s | %-15s | %-8s |\n", "ID", "T√™n phim", "Th·ªÉ lo·∫°i", "Th·ªùi l∆∞·ª£ng");
        System.out.println("----------------------------------------------------------------");

        for (Movie movie : movies) {
            System.out.printf("| %-8s | %-20s | %-15s | %-8d |\n",
                    movie.getId(), movie.getName(), movie.getGenre(), movie.getDuration());
        }
        System.out.println("----------------------------------------------------------------");
    }

    @Override
    public Movie findMovieById(String movieId) {
        for (Movie movie : movies) {
            if (movie.getId().equals(movieId)) {
                return movie;
            }
        }
        return null;
    }

    @Override
    public List<Movie> searchMovieByName(String name) {
        List<Movie> result = new ArrayList<>();
        for (Movie movie : movies) {
            if (movie.getName().toLowerCase().contains(name.toLowerCase())) {
                result.add(movie);
            }
        }

        // In k·∫øt qu·∫£ tr·ª±c ti·∫øp trong ph∆∞∆°ng th·ª©c
        if (result.isEmpty()) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y phim n√†o c√≥ t√™n ch·ª©a: " + name);
        } else {
            System.out.println("\nüé¨ K·∫æT QU·∫¢ T√åM KI·∫æM üé¨");
            System.out.println("---------------------------------------------------------------");
            System.out.printf("| %-8s | %-20s | %-15s | %-8s |\n", "ID", "T√™n phim", "Th·ªÉ lo·∫°i", "Th·ªùi l∆∞·ª£ng");
            System.out.println("---------------------------------------------------------------");
            for (Movie movie : result) {
                System.out.printf("| %-8s | %-20s | %-15s | %-8d |\n",
                        movie.getId(), movie.getName(), movie.getGenre(), movie.getDuration());
            }
            System.out.println("---------------------------------------------------------------");
        }

        return result;
    }

    @Override
    public void sortMovies(int option) {
        if (movies.isEmpty()) {
            System.out.println("üì≠ Danh s√°ch phim tr·ªëng, kh√¥ng th·ªÉ s·∫Øp x·∫øp.");
            return;
        }

        switch (option) {
            case 1:
                movies.sort(Comparator.comparing(Movie::getName)); // T√™n A-Z
                break;
            case 2:
                movies.sort(Comparator.comparing(Movie::getName).reversed()); // T√™n Z-A
                break;
            case 3:
                movies.sort(Comparator.comparingInt(Movie::getDuration)); // Th·ªùi l∆∞·ª£ng tƒÉng d·∫ßn
                break;
            case 4:
                movies.sort(Comparator.comparingInt(Movie::getDuration).reversed()); // Th·ªùi l∆∞·ª£ng gi·∫£m d·∫ßn
                break;
            case 5:
                movies.sort(Comparator.comparing(Movie::getGenre)); // Th·ªÉ lo·∫°i A-Z
                break;
            case 6:
                movies.sort(Comparator.comparing(Movie::getGenre).reversed()); // Th·ªÉ lo·∫°i Z-A
                break;
            default:
                System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng ch·ªçn t·ª´ 1 ƒë·∫øn 6.");
                return;
        }
        System.out.println("‚úÖ Danh s√°ch phim ƒë√£ ƒë∆∞·ª£c s·∫Øp x·∫øp!");
        displayMovies();
    }

    @Override
    public void exportMoviesToCSV(String filename) {
        if (movies.isEmpty()) {
            System.out.println("‚ùå Kh√¥ng c√≥ phim n√†o ƒë·ªÉ xu·∫•t!");
            return;
        }

        try (FileWriter writer = new FileWriter(filename, false)) {
            writer.append("ID,T√™n phim,Th·ªÉ lo·∫°i,Th·ªùi l∆∞·ª£ng\n");
            for (Movie movie : movies) {
                writer.append(String.format("\"%s\",\"%s\",\"%s\",%d\n",
                        movie.getId(),
                        movie.getName().replace("\"", "'"),  // Tr√°nh l·ªói n·∫øu c√≥ d·∫•u `"`
                        movie.getGenre().replace("\"", "'"),
                        movie.getDuration()));
            }
            System.out.println("‚úÖ Xu·∫•t file CSV th√†nh c√¥ng: " + filename);
        } catch (IOException e) {
            System.out.println("‚ùå L·ªói khi xu·∫•t file: " + e.getMessage());
        }
    }
    @Override
    public void importMoviesFromCSV(String filename) {
        File file = new File(filename);
        if (!file.exists()) {
            System.out.println("‚ùå File kh√¥ng t·ªìn t·∫°i: " + filename);
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            boolean isFirstLine = true;

            while ((line = reader.readLine()) != null) {
                if (isFirstLine) {
                    isFirstLine = false; // B·ªè qua d√≤ng ti√™u ƒë·ªÅ
                    continue;
                }

                // X·ª≠ l√Ω d·ªØ li·ªáu b·ªã thi·∫øu ho·∫∑c l·ªói ƒë·ªãnh d·∫°ng
                String[] data = line.split(",(?=([^\"]*\"[^\"]*\")*[^\"]*$)"); // X·ª≠ l√Ω d·∫•u ph·∫©y trong chu·ªói
                if (data.length != 4) {
                    System.out.println("‚ùå D√≤ng d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá: " + line);
                    continue;
                }

                String id = data[0].replace("\"", "").trim();
                String name = data[1].replace("\"", "").trim();
                String genre = data[2].replace("\"", "").trim();
                int duration;

                try {
                    duration = Integer.parseInt(data[3].trim());
                } catch (NumberFormatException e) {
                    System.out.println("‚ùå L·ªói parse th·ªùi l∆∞·ª£ng: " + data[3]);
                    continue;
                }

                movies.add(new Movie(id, name, genre, duration));
            }

            System.out.println("‚úÖ ƒê·ªçc file CSV th√†nh c√¥ng: " + filename);
            displayMovies();
        } catch (IOException e) {
            System.out.println("‚ùå L·ªói khi ƒë·ªçc file: " + e.getMessage());
        }
    }

}
